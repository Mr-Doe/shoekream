<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shoekream.www.repository.searchDAO.productDAO.ProductDAO">

	<sql id="whereSize">
		<if test="sizeToArray != null">
			and ss.size_id in
			<foreach collection="sizeToArray" item="sizeID" separator=","
				open="(" close=")">
				#{sizeID}
			</foreach>
		</if>
	</sql>
	
	<sql id="whereBrandCategory">
		<if test="brandToArray != null">
			and sb.brand_id in
			<foreach collection="brandToArray" item="brandID"
				separator="," open="(" close=")">
				#{brandID}
			</foreach>
		</if>
		<if test="categoryToArray != null">
			and p.category in
			<foreach collection="categoryToArray" item="categoryID"
				separator="," open="(" close=")">
				#{categoryID}
			</foreach>
		</if>
	</sql>
	
	<sql id="keyword">
		like CONCAT('%',#{keyword},'%')
	</sql>
	
	<sql id="search">
		<if test="keyword != null">
			and (replace(e_name, ' ', '') <include refid="keyword"/>
				or replace(k_name, ' ', '') <include refid="keyword"/>
				or replace(model, ' ', '') <include refid="keyword"/>
				or replace(sb.brand_name, ' ', '') <include refid="keyword"/>)  
		</if>
	</sql>

	<insert id="insertProduct" parameterType="shopVO">
		INSERT INTO product (
			e_name
			, k_name
			, retail_price
			, model
			, brand
		) VALUES (
			#{englishName}
			, #{koreanName}
			, #{sellerPrice}
			, #{modelNumber}
			, #{brandName}
		)
	</insert>

	<select id="selectList" parameterType="pageVO" resultType="HashMap">
		SELECT
			p.pno
			, e_name
			, k_name
			, sb.brand_name
			, sc.category_name
			, th_img
		FROM
			product p
		LEFT JOIN
			shoe_brand sb
		ON
			p.brand = sb.brand_id
		JOIN
			shoe_category sc
		ON
			p.category = sc.category_id
		WHERE
			1=1
		<include refid="whereBrandCategory" />
		<include refid="search"/>
		ORDER BY
			pno desc
		LIMIT
			#{pageStart}, #{qty}
	</select>
	<select id="selectMinPrice" parameterType="pageVO" resultType="HashMap">
		SELECT
			pno
			, min(price) as min_price
		FROM
			items i
		JOIN
			shoe_size ss
		ON
			i.shoe_size = ss.size_id
		WHERE
			1=1
		AND
			buyer_email is null
		<include refid="whereSize" />
		GROUP BY
			pno
	</select>
	<select id="totalCount" parameterType="pageVO" resultType="int">
		SELECT
			count(pno)
		FROM
			product p
		JOIN
			shoe_brand sb
		ON
			p.brand = sb.brand_id
		JOIN
			shoe_category sc
		ON
			p.category = sc.category_id
		WHERE
			1=1
		<include refid="whereBrandCategory"/>
		<include refid="search"/>
	</select>
	<select id="selectBrandList" resultType="brandVO">
		select * from shoe_brand
	</select>
	<select id="selectCategoryList" resultType="categoryVO">
		select * from
		shoe_category
	</select>
</mapper>